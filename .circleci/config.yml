version: 2.1

orbs:
  atvise:
    executors:
      node:
        docker:
          - image: lsage/pnpm-circleci-node:12

    commands:
      attach:
        steps:
          - checkout:
              path: ~/project
          - attach_workspace:
              at: ~/project
      git-login:
        steps:
          - run:
              name: Setting up git user
              command: |
                git config --global user.email 5802656+LukasHechenberger@users.noreply.github.com
                git config --global user.name ls-age
      npm-login:
        steps:
          - run:
              name: Logging in to npm
              command: echo "$NPM_TOKEN" > ~/.npmrc
      release:
        parameters:
          package:
            type: string
          dir:
            type: string
          options:
            type: string
            default: ''
        steps:
          - run:
              name: Release <<parameters.package>> if needed
              command: npx @ls-age/bump-version release --dir <<parameters.dir>> --package-manager pnpm --gh-token $GH_TOKEN <<parameters.options>>

jobs:
  install:
    executor: atvise/node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "pnpm-lock.yaml" }}
            - v1-deps
      - run:
          name: Install dependencies
          command: pnpm install --frozen-lockfile
      - save_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store
            - ~/.npm
            - ~/.cache
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint:
    executor: atvise/node
    steps:
      - atvise/attach
      - run:
          name: Run ESLint
          command: npm run lint -- --format junit --output-file ~/reports/eslint.xml
      - run:
          name: Check prettier
          command: npm run format -- --check
          when: always
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

  build:
    executor: atvise/node
    steps:
      - atvise/attach
      - run:
          name: Build packages
          command: pnpm run -r build
      - persist_to_workspace:
          root: .
          paths:
            - packages/*/out
            - packages/*/build

  package-sync:
    executor: atvise/node
    steps:
      - atvise/attach
      - run:
          name: Validate packages are in sync
          command: npm run test

  deploy-docs:
    executor: atvise/node
    steps:
      - atvise/attach
      - atvise/git-login
      - run:
          name: Deploy docs to GitHub Pages
          command: GIT_USER=LukasHechenberger npm --prefix packages/gh-pages run deploy -- --skip-build

  release:
    executor: atvise/node
    steps:
      - atvise/attach
      - atvise/git-login
      - atvise/npm-login
      - atvise/release:
          package: atvise-scripts
          dir: packages/atvise-scripts
      - atvise/release:
          package: '@atvise/modular-webmi'
          dir: packages/modular-webmi
      - atvise/release:
          package: '@atvise/types-webmi'
          dir: packages/types-webmi
          options: --skip-release-files
      - atvise/release:
          package: playground
          dir: examples/playground
          options: --release-files build

workflows:
  version: 2

  default:
    jobs:
      - install
      - build:
          requires:
            - install
      - package-sync:
          requires:
            - install
      - lint:
          requires:
            - build
      - release:
          requires:
            - build
            - package-sync
            - lint
      - deploy-docs:
          requires:
            - release
