{"version":3,"file":"index.mjs","sources":["../src/webmi.ts","../src/data.ts"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\n\n/// <reference types=\"@atvise/types-webmi\" />\n\nexport function getWebMI() {\n  if (!window.webMI) {\n    throw new Error(`No webmi detected. Is your atvise server running?`);\n  }\n\n  return window.webMI;\n}\n","import { getWebMI } from './webmi';\n\ntype VariableValue<T> = webMI.data.VariableValue<T>;\ntype ResultError = webMI.data.ResultError;\n\nconst webmiData = getWebMI().data;\n\nfunction isErrorResult(result): result is ResultError {\n  return result.error;\n}\n\nconst createDataError = (result: ResultError) =>\n  Object.assign(new Error(result.errorstring), { code: result.error });\n\nfunction resultCallback<R>(resolve: (result: R) => void, reject: (error: Error) => void) {\n  return (result: ResultError | R) => {\n    if (isErrorResult(result)) {\n      reject(createDataError(result));\n    } else {\n      resolve(result);\n    }\n  };\n}\n\ntype DataCall<R> = (callback: (result: ResultError | R) => void) => void;\n\nfunction promisifyDataCall<R>(fn: DataCall<R>) {\n  return new Promise<R>((resolve, reject) => fn(resultCallback(resolve, reject)));\n}\n\nexport function read<V = any>(address: string) {\n  return promisifyDataCall<VariableValue<V>>((cb) => webmiData.read(address, cb));\n}\n\nexport function write<V>(address: string, value: V) {\n  return promisifyDataCall<void>((cb) => webmiData.write(address, value, cb));\n}\n\nexport function call<V = Record<string, unknown>>(name: string, args: Record<string, string>) {\n  return promisifyDataCall<V>((cb) => webmiData.call(name, args, cb));\n}\n\ntype SubscriptionState<V> = { error: Error } | { data: VariableValue<V> };\n\nexport function subscribe<V>(address: string, onResult: (data: SubscriptionState<V>) => void) {\n  const subscription = webmiData.subscribe(address, (result) =>\n    onResult(isErrorResult(result) ? { error: createDataError(result) } : { data: result })\n  );\n\n  return {\n    cancel: () => webmiData.unsubscribe(subscription),\n  };\n}\n"],"names":[],"mappings":"AAAA;AAEA;SAEgB,QAAQ;IACtB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;QACjB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;KACtE;IAED,OAAO,MAAM,CAAC,KAAK,CAAC;AACtB;;ACLA,IAAM,SAAS,GAAG,QAAQ,EAAE,CAAC,IAAI,CAAC;AAElC,SAAS,aAAa,CAAC,MAAM;IAC3B,OAAO,MAAM,CAAC,KAAK,CAAC;AACtB,CAAC;AAED,IAAM,eAAe,GAAG,UAAC,MAAmB;IAC1C,OAAA,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC;AAApE,CAAoE,CAAC;AAEvE,SAAS,cAAc,CAAI,OAA4B,EAAE,MAA8B;IACrF,OAAO,UAAC,MAAuB;QAC7B,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE;YACzB,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;SACjC;aAAM;YACL,OAAO,CAAC,MAAM,CAAC,CAAC;SACjB;KACF,CAAC;AACJ,CAAC;AAID,SAAS,iBAAiB,CAAI,EAAe;IAC3C,OAAO,IAAI,OAAO,CAAI,UAAC,OAAO,EAAE,MAAM,IAAK,OAAA,EAAE,CAAC,cAAc,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,GAAA,CAAC,CAAC;AAClF,CAAC;SAEe,IAAI,CAAU,OAAe;IAC3C,OAAO,iBAAiB,CAAmB,UAAC,EAAE,IAAK,OAAA,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,GAAA,CAAC,CAAC;AAClF,CAAC;SAEe,KAAK,CAAI,OAAe,EAAE,KAAQ;IAChD,OAAO,iBAAiB,CAAO,UAAC,EAAE,IAAK,OAAA,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,GAAA,CAAC,CAAC;AAC9E,CAAC;SAEe,IAAI,CAA8B,IAAY,EAAE,IAA4B;IAC1F,OAAO,iBAAiB,CAAI,UAAC,EAAE,IAAK,OAAA,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,GAAA,CAAC,CAAC;AACtE,CAAC;SAIe,SAAS,CAAI,OAAe,EAAE,QAA8C;IAC1F,IAAM,YAAY,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,UAAC,MAAM;QACvD,OAAA,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,eAAe,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;KAAA,CACxF,CAAC;IAEF,OAAO;QACL,MAAM,EAAE,cAAM,OAAA,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,GAAA;KAClD,CAAC;AACJ;;;;"}