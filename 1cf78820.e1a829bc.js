(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{73:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return o}));var i=a(3),n=a(7),l=(a(0),a(94)),r={slug:"/packages/react",title:"@atvise/webmi-react",custom_edit_url:"https://github.com/atvise/create-atvise-app/edit/master/packages/react/README.md"},s={unversionedId:"packages/react/README",id:"packages/react/README",isDocsHomePage:!1,title:"@atvise/webmi-react",description:"React bindings for webmi",source:"@site/docs/packages/react/README.md",slug:"/packages/react",permalink:"/create-atvise-app/docs/packages/react",editUrl:"https://github.com/atvise/create-atvise-app/edit/master/packages/react/README.md",version:"current",sidebar:"someSidebar",previous:{title:"@atvise/modular-webmi",permalink:"/create-atvise-app/docs/packages/modular-webmi"},next:{title:"@atvise/types-webmi",permalink:"/create-atvise-app/docs/packages/types-webmi"}},c=[{value:"Installation",id:"installation",children:[{value:"create-atvise-app (recommended)",id:"create-atvise-app-recommended",children:[]},{value:"Manual installation",id:"manual-installation",children:[]}]},{value:"Usage",id:"usage",children:[]},{value:"Available hooks",id:"available-hooks",children:[{value:"useCall",id:"usecall",children:[]},{value:"useSubscription",id:"usesubscription",children:[]},{value:"useValue",id:"usevalue",children:[]}]},{value:"Upcoming hooks",id:"upcoming-hooks",children:[]}],b={toc:c};function o(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(l.b)("wrapper",Object(i.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"React bindings for webmi")),Object(l.b)("h2",{id:"installation"},"Installation"),Object(l.b)("h3",{id:"create-atvise-app-recommended"},"create-atvise-app (recommended)"),Object(l.b)("p",null,"Run ",Object(l.b)("inlineCode",{parentName:"p"},"npx create-atvise-app my-app")," to create a new react app with webmi all set up."),Object(l.b)("h3",{id:"manual-installation"},"Manual installation"),Object(l.b)("p",null,"These are the steps required to add webmi bindings to your existing react project:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"First install this package and ",Object(l.b)("inlineCode",{parentName:"p"},"atvise-scripts")," with npm:"),Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"npm install --save-dev @atvise/webmi-react atvise-scripts"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Setup ",Object(l.b)("inlineCode",{parentName:"p"},"atvise-scripts")," with ",Object(l.b)("inlineCode",{parentName:"p"},"npx atvise-scripts init")))),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"@atvise/webmi-react")," exports hooks that can be used in functional React components:"),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"import { useSubscription } from '@atvise/webmi-react';\n\n/**\n * @example\n * <MyLabel address=\"AGENT.OBJECTS.test\" />\n */\nfunction MyLabel(props) {\n  const { loading, data, error } = useSubscription(props.address);\n\n  if (loading) return <i>loading...</i>;\n  if (error) return <i>An error ocurred</i>;\n\n  return <p>AGENT.OBJECTS.test currently is: {data.value}</p>;\n}\n")),Object(l.b)("h2",{id:"available-hooks"},"Available hooks"),Object(l.b)("h3",{id:"usecall"},"useCall"),Object(l.b)("p",null,"A hook to call a webMI method script."),Object(l.b)("h4",{id:"parameters"},"Parameters"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"name")," ",Object(l.b)("strong",{parentName:"li"},Object(l.b)("a",Object(i.a)({parentName:"strong"},{href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String"}),"string"))," The method script to call."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"options")," ",Object(l.b)("strong",{parentName:"li"},"UseCallOptions","<","A, R, D>")," The options to use. (optional, default ",Object(l.b)("inlineCode",{parentName:"li"},"{}"),")",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"options.defaults")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"options.onCompleted")," (optional, default ",Object(l.b)("inlineCode",{parentName:"li"},"noop"),")"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"options.onError")," (optional, default ",Object(l.b)("inlineCode",{parentName:"li"},"noop"),")")))),Object(l.b)("p",null,"Returns ",Object(l.b)("strong",{parentName:"p"},"[","UseCallCallback","<","A, R, D>, UseCallState","<","R>]")),Object(l.b)("h3",{id:"usesubscription"},"useSubscription"),Object(l.b)("p",null,"A hook that returns the live value of a variable."),Object(l.b)("h4",{id:"parameters-1"},"Parameters"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"address")," ",Object(l.b)("strong",{parentName:"li"},Object(l.b)("a",Object(i.a)({parentName:"strong"},{href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String"}),"string"))," The variable's address.")),Object(l.b)("h3",{id:"usevalue"},"useValue"),Object(l.b)("p",null,"A hook that returns a variable's value."),Object(l.b)("h4",{id:"parameters-2"},"Parameters"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"address")," ",Object(l.b)("strong",{parentName:"li"},Object(l.b)("a",Object(i.a)({parentName:"strong"},{href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String"}),"string"))," The variable's node id.")),Object(l.b)("h2",{id:"upcoming-hooks"},"Upcoming hooks"),Object(l.b)("ul",{className:"contains-task-list"},Object(l.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(l.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ",Object(l.b)("inlineCode",{parentName:"li"},"useClientVariables()")," - Returns logged in user, selected language, ..."),Object(l.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(l.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ",Object(l.b)("inlineCode",{parentName:"li"},"useFilterSubscription()")," - Subscription hook with filters (using ",Object(l.b)("em",{parentName:"li"},"webMI.data.subscribeFilters"),")"),Object(l.b)("li",Object(i.a)({parentName:"ul"},{className:"task-list-item"}),Object(l.b)("input",Object(i.a)({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ",Object(l.b)("inlineCode",{parentName:"li"},"useAlarms")," - A hook that returns alarms, so it can be used for an alarm list / table")))}o.isMDXComponent=!0}}]);