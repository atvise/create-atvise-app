{"version":3,"sources":["examples/index.ts","examples/basic/index.ts","examples/basic/app.jsx","examples/chart/index.ts","examples/chart/app.jsx","components/layout/Header.tsx","components/utils/CodeMirror.tsx","components/utils/Editor.tsx","components/repl/Input.tsx","../../../modular-webmi/out/index.mjs","components/repl/output/Preview.tsx","components/repl/Output.tsx","bundler/BundlerController.ts","webpack:///./src/workers/bundle.ts?0af0","bundler/plugins/babel.ts","bundler/plugins/repl-runtime.ts","bundler/fetchCached.ts","bundler/plugins/cdnjs.ts","bundler/Bundler.ts","workers/bundle.ts","components/repl/Pane.tsx","components/pages/Repl.tsx","hooks/useStoredState.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["name","files","contents","useStyles","makeStyles","space","flexGrow","Header","onSelectExample","darkMode","useDarkMode","classes","useState","anchorEl","setAnchorEl","handleClose","AppBar","position","Toolbar","Typography","variant","className","Button","color","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","examples","map","example","MenuItem","key","selectExample","Tooltip","title","IconButton","toggle","value","Brightness3","WbSunny","CodeMirror","codemirror","height","flex","Editor","mode","onChange","readOnly","options","theme","useTheme","palette","type","lineNumbers","gutters","lint","onBeforeChange","useCallback","_","__","text","ReplInput","selectedFileIndex","setSelectedFileIndex","selectedFile","updateFile","f","i","Tabs","file","Tab","label","window","webMI","Error","getWebMI","data","iframe","width","fab","bottom","spacing","right","ReplPreview","bundle","srcDoc","setSrcDoc","useRef","preview","useContext","PreviewContext","useEffect","console","log","imports","url","join","JSON","stringify","code","src","frameBorder","ref","onLoad","e","previewContext","target","contentWindow","result","setStatus","current","Fab","location","reload","Refresh","ReplOutput","selectedTab","setSelectedTab","worker","Worker","uid","BundlerController","handlers","Map","BundlerWorker","this","addEventListener","handler","get","delete","buildUid","Promise","resolve","reject","set","postMessage","babel","include","transform","source","id","presets","modules","replId","isReplFile","startsWith","inputId","runtimeId","replRuntime","entry","resolveId","has","load","responseCache","cache","checkFetchResponse","response","ok","Object","assign","statusText","status","fetchCachedResponse","promise","fetch","redirect","method","then","catch","error","fetchCached","path","handleResponse","operation","isUrl","isFile","test","resolvePackageEntry","base","a","r","json","manifest","module","main","cdnjs","packagesUrl","entries","globals","URL","href","global","importer","external","match","message","outputOptions","warn","aborted","isMessage","isError","bundler","rollupCache","currentBuildId","start","Date","now","abort","getSourceFile","find","rollup","input","onwarn","warning","plugins","replace","values","commonjs","react","victory","generate","format","output","chunk","stats","duration","onmessage","info","fromEntries","stack","pane","display","flexDirection","content","overflow","backgroundColor","background","paper","alert","padding","whiteSpace","textAlign","fontFamily","light","contrastText","progress","justifyContent","alignItems","success","alertSpace","ReplPane","children","statusProp","severity","isMultilineError","split","length","CircularProgress","size","createContext","root","Repl","storage","localStorage","defaultValue","stored","getItem","parse","state","setState","updatedState","setItem","useStoredState","setFiles","inputErrors","setInputErrors","bundlerStatus","setBundlerStatus","previewStatus","setPreviewStatus","bundlerResult","setBundlerResult","cancelled","setTimeout","Provider","App","prefersDarkMode","useMemo","createMuiTheme","primary","secondary","setExample","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVASe,GCLA,CACbA,KAAM,cACNC,MAAO,CACL,CACED,KAAM,UACNE,SCTS,2gBCIA,CACbF,KAAM,QACNC,MAAO,CACL,CACED,KAAM,UACNE,SCTS,8zCCgBTC,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,KAQC,SAASC,EAAT,GAA6C,IAA3BC,EAA0B,EAA1BA,gBACzBC,EAAWC,cACXC,EAAUR,IAFyC,EAGzBS,mBAA6B,MAHJ,mBAGlDC,EAHkD,KAGxCC,EAHwC,KAQnDC,EAAc,kBAAMD,EAAY,OAOtC,OACE,kBAACE,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,0BAEA,yBAAKC,UAAWV,EAAQN,QAExB,kBAACiB,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAjBV,SAACC,GAAD,OAClBX,EAAYW,EAAMC,iBAgBd,qBAGA,kBAACC,EAAA,EAAD,CAAMd,SAAUA,EAAUe,aAAW,EAACC,KAAMC,QAAQjB,GAAWkB,QAAShB,GACrEiB,EAASC,KAAI,SAACC,GAAD,OACZ,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAQlC,KAAMwB,QAAS,kBAjB1B,SAACU,GACrB1B,EAAgB0B,GAChBnB,IAeoDsB,CAAcH,KACvDA,EAAQlC,UAKf,kBAACsC,EAAA,EAAD,CAASC,MAAM,oBACb,kBAACC,EAAA,EAAD,CAAYjB,MAAM,UAAUC,QAASf,EAASgC,QAC3ChC,EAASiC,MAAQ,kBAACC,EAAA,EAAD,MAAkB,kBAACC,EAAA,EAAD,U,iFCpCjCC,G,2BAAAA,EAAf,YCrBM1C,EAAYC,aAAW,iBAAO,CAClC0C,WAAY,CACVC,OAAQ,OACRC,KAAM,OASK,SAASC,EAAT,GAA6D,IAA3CC,EAA0C,EAA1CA,KAAMR,EAAoC,EAApCA,MAAOS,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,SAChDzC,EAAUR,IAKVkD,EAAU,CACdH,OACAI,MAAiB,SAJfC,cADFC,QAAWC,KAKe,UAAY,UACtCC,aAAa,EACbN,WACAO,QAAS,CAAC,2BACVC,MAAM,GAGFC,EAAiBC,uBAAY,SAACC,EAAGC,EAAIC,GAAR,cAAiBd,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAWc,KAAO,CAACd,IAEvE,OACE,kBAAC,EAAD,CACE9B,UAAWV,EAAQmC,WACnBJ,MAAOA,EACPW,QAASA,EACTQ,eAAgBA,IC5BP,SAASK,EAAT,GAAgD,IAA3BjE,EAA0B,EAA1BA,MAAOkD,EAAmB,EAAnBA,SAAmB,EACVvC,mBAAS,GADC,mBACrDuD,EADqD,KAClCC,EADkC,KAEtDC,EAAepE,EAAMkE,GAErBG,EAAaR,uBACjB,SAAC5D,GACCiD,EAASlD,EAAMgC,KAAI,SAACsC,EAAGC,GAAJ,OAAWA,IAAML,EAAN,2BAA+BI,GAA/B,IAAkCrE,aAAaqE,QAE/E,CAACtE,EAAOkE,EAAmBhB,IAG7B,OACE,oCACE,kBAACsB,EAAA,EAAD,CAAM/B,MAAOyB,EAAmBhB,SAAU,SAACY,EAAGrB,GAAJ,OAAc0B,EAAqB1B,KAC1EzC,EAAMgC,KAAI,SAACyC,GAAD,OACT,kBAACC,EAAA,EAAD,CAAKvC,IAAKsC,EAAK1E,KAAM4E,MAAOF,EAAK1E,WAIrC,kBAACiD,EAAD,CAAQC,KAAK,MAAMR,MAAO2B,EAAanE,SAAUiD,SAAUmB,K,uBCLjE,WACI,IAAKO,OAAOC,MACR,MAAM,IAAIC,MAAM,qDAEpB,OAAOF,OAAOC,OAGFE,GAAWC,KCnB3B,IAAM9E,EAAYC,aAAW,SAACkD,GAAD,MAAY,CACvC4B,OAAQ,CACNlC,KAAM,EACNmC,MAAO,OACPpC,OAAQ,QAEVqC,IAAK,CACHnE,SAAU,WACVoE,OAAQ/B,EAAMgC,QAAQ,GACtBC,MAAOjC,EAAMgC,QAAQ,QAQV,SAASE,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,OAC9BhF,EAAWC,cACXC,EAAUR,IAFqC,EAGzBS,mBAAS,IAHgB,mBAG9C8E,EAH8C,KAGtCC,EAHsC,KAI/CT,EAASU,iBAA0B,MACnCC,EAAUC,qBAAWC,IA8C3B,OA5BAC,qBAAU,WACR,IAAKP,EAAQ,OAAOQ,QAAQC,IAAI,0BAEhCP,EAAU,kKAAD,OAUTF,EAAOA,OAAOU,QAAQlE,KAAI,SAACmE,GAAD,6BAAyBA,EAAzB,mBAA2CC,KAAK,QAVjE,oFAcYC,KAAKC,UAAU,CAAE9F,aAd7B,mEAmBPgF,EAAOA,OAAOe,KAnBP,uCAuBR,CAACf,EAAQhF,IAGV,oCACE,4BACEgG,IAAI,wBACJpF,UAAWV,EAAQuE,OACnBwB,YAAY,IACZnE,MAAM,UACNmD,OAAQA,EACRiB,IAAKzB,EACL0B,OArDN,SAAsBC,GACpB,IAAMC,EAAkBD,EAAEE,OAA6BC,cAEvDf,QAAQC,IAAI,kBAERY,EAAeG,QACjBpB,EAAQqB,UAAUJ,EAAeG,WAkDhC/B,EAAOiC,SACN,kBAACC,EAAA,EAAD,CACE7F,MAAM,UACNF,UAAWV,EAAQyE,IACnB5D,QAAS,oCAAM0D,EAAOiC,eAAb,iBAAM,EAAgBH,qBAAtB,aAAM,EAA+BK,SAASC,WAEvD,kBAACC,EAAA,EAAD,QCzFK,SAASC,EAAT,GAAwC,IAAlB/B,EAAiB,EAAjBA,OAAiB,EACd7E,mBAAS,GADK,mBAC7C6G,EAD6C,KAChCC,EADgC,KAGpD,OACE,oCACE,kBAACjD,EAAA,EAAD,CAAM/B,MAAO+E,EAAatE,SAAU,SAACY,EAAGrB,GAAJ,OAAcgF,EAAehF,KAC/D,kBAACiC,EAAA,EAAD,CAAKC,MAAM,aAGb,kBAACY,EAAD,CAAaC,OAAQA,K,ICXvBkC,E,gBCPW,aACb,OAAO,IAAIC,OAAO,IAA0B,wCDQ1CC,EAAM,EAEWC,E,WAInB,aAAe,IAAD,gCAHNC,SAAW,IAAIC,IAGT,KAFNL,YAEM,EACPA,IAAQA,EAAS,IAAIM,GAC1BC,KAAKP,OAASA,EAEdO,KAAKP,OAAOQ,iBAAiB,WAAW,SAAC1G,GACvC,IAAM2G,EAAU,EAAKL,SAASM,IAAI5G,EAAMwD,KAAK4C,KAEzCO,IACFA,EAAQ3G,EAAMwD,MAEU,WAApBxD,EAAMwD,KAAKxB,MACb,EAAKsE,SAASO,OAAO7G,EAAMwD,KAAK4C,S,mDAMjC5H,GAAoB,IAAD,OAClBsI,IAAaV,EAEnB,OAAO,IAAIW,SAA8B,SAACC,EAASC,GACjD,EAAKX,SAASY,IAAIJ,EAAUE,GAC5B,EAAKd,OAAOiB,YAAY,CAAEnF,KAAM,SAAUoE,IAAKU,EAAUtI,iB,yCElChD,SAAS4I,GAAT,GAAmE,IAAlDC,EAAiD,EAAjDA,QAC9B,MAAO,CACL9I,KAAM,QACN+I,UAFK,SAEKC,EAAQC,GAChB,IAAKH,EAAQG,GAAK,OAAO,KAEzB,IAAMhC,EAAS8B,oBAAUC,EAAQ,CAAEE,QAAS,CAAC,QAAS,CAAC,MAAO,CAAEC,SAAS,OACzE,MAAO,CAAE3C,KAAMS,EAAOT,KAAOvE,IAAKgF,EAAOhF,OCP/C,IAAMmH,GAAS,SAACpJ,GAAD,sBAA2BA,IAC7BqJ,GAAa,SAACJ,GAAD,OAAgBA,EAAGK,WAAW,WAE3CC,GAAUH,GAAO,SACxBI,GAAYJ,GAAO,eA0CV,SAASK,GAAYC,GAClC,IAAMzJ,EAAQ,IAAI+H,IAAoB,CACpC,CAACwB,GA1CQ,i7BA2CT,CACED,GADF,kCAE6BC,GAF7B,kCAGiBE,EAAM1J,KAHvB,4DAUF,MAAO,CACLA,KAAM,eACN2J,UAFK,SAEKV,GACR,OAAOhJ,EAAM2J,IAAIX,GAAMA,EAAK,MAE9BY,KALK,SAKAZ,GACH,OAAOhJ,EAAMoI,IAAIY,KCpEvB,IAAMa,GAAgB,IAAI9B,IACpB+B,GAAQ,IAAI/B,IAIZgC,GAAqB,SAACC,GAC1B,IAAKA,EAASC,GACZ,MAAMC,OAAOC,OAAO,IAAIrF,MAAMkF,EAASI,YAAT,iBAAiCJ,EAASK,SAAW,CACjFlE,IAAK6D,EAAS7D,MAGlB,OAAO6D,GAGF,SAASM,GAAoBnE,GAClC,GAAI0D,GAAcF,IAAIxD,GACpB,OAAO0D,GAAczB,IAAIjC,GAG3B,IAAMoE,EAAUC,MAAMrE,EAAK,CAAEsE,SAAU,SAAUC,OAAQ,SACtDC,KAAKZ,IACLa,OAAM,SAACC,GAEN,MADAhB,GAAcxB,OAAOlC,GACf0E,KAIV,OAFAhB,GAAcnB,IAAIvC,EAAKoE,GAEhBA,EAGF,SAASO,GAAeC,EAAcC,GAC3C,GAAIlB,GAAMH,IAAIoB,GACZ,OAAOjB,GAAM1B,IAAI2C,GAGnB,IAAME,EAAYT,MAAMO,EAAM,CAAEN,SAAU,WACvCE,KAAKZ,IACLY,KAAKK,GACLJ,OAAM,SAACC,GAEN,MADAf,GAAMzB,OAAO0C,GACPF,KAIV,OAFAf,GAAMpB,IAAIqC,EAAME,GAETA,ECzCF,IAAMC,GAAQ,SAAClC,GAAD,OAAgBA,EAAGK,WAAW,WAAaL,EAAGK,WAAW,UACjE8B,GAAS,SAACnC,GAAD,MAAgB,YAAYoC,KAAKpC,I,SAExCqC,G,iFAAf,WAAmCC,GAAnC,eAAAC,EAAA,sEACyBT,GAAY,GAAD,OAAIQ,EAAJ,kBAAyB,SAACE,GAAD,OAAOA,EAAEC,UADtE,cACQC,EADR,yBAESA,EAASC,QAAUD,EAASE,MAFrC,4C,sBAYe,SAASC,GAAT,GAUb,IAJE,IALFC,EAKC,EALDA,YAKC,IAJDC,eAIC,MAJS,GAIT,EACKC,EAAqC,GAG3C,MAA4B9B,OAAO6B,QAAQA,GAA3C,eAAqD,CAAC,IAAD,sBAAzChM,EAAyC,KAAnC0J,EAAmC,KAC7CtD,EAAM,IAAI8F,IAAIxC,EAAMA,MAAd,UAAwBqC,EAAxB,YAAuC/L,EAAvC,MAAgDmM,KAC3DzC,EAAwBtD,IAAMA,EAC/B6F,EAAQ7F,GAAOsD,EAAM0C,OAGvB,MAAO,CACLpM,KAAM,QACA2J,UAFD,SAEWV,EAAIoD,GAAW,OAAD,+GAG5BpG,QAAQC,IAAI,YAAa+C,EAAI,OAAQoD,IAEjCL,EAAQ/C,GALgB,yCAMnB,CAAEA,GAAK+C,EAAQ/C,GAAsB7C,IAAKkG,UAAU,IANjC,WAOjBnB,GAAMlC,GAPW,gBAQ1B7C,EAAM6C,EARoB,2BASjBA,EAAGK,WAAW,KATG,oBAUrB+C,EAVqB,0CAUJ,MAVI,QAY1BjG,EAAM,IAAI8F,IAAIjD,EAAImC,GAAOiB,GAAYA,EAAnB,UAAiCA,EAAjC,MAA8CF,KAZtC,2BAc1B/F,EAAG,UAAM2F,EAAN,YAAqB9C,IACpBA,EAAGsD,MAAM,OAAUtD,EAAGsD,MAAM,mBAfN,0DAmBJjB,GAAoBlF,GAnBhB,SAmBlBsD,EAnBkB,UAsBtBtD,EAAM,IAAI8F,IAAIxC,EAAR,UAAkBtD,EAAlB,MAA0B+F,MAtBV,WA2BvBf,GAAOhF,GA3BgB,4CA6BVmE,GAAoBnE,GA7BV,wCA6BgBA,KA7BhB,yCA+BlB,IAAIrB,MAAJ,6BACkBkE,EADlB,mBAC+BoD,EAD/B,cAC6C,KAAMG,QADnD,aAEF,KAAMpG,KAAO,SAFX,MA/BkB,iCAuCrBA,GAvCqB,8DAyC9BqG,cAAe,SAACpJ,GAAD,mBAAC,eACXA,GADU,IAEb4I,QAAQ,2BAAMA,GAAa5I,EAAQ4I,SAAW,OAEhDpC,KAAK,WAAD,4BAAE,WAAOZ,GAAP,eAAAuC,EAAA,6DACApF,EAAM6C,EAELkC,GAAMlC,KACThD,QAAQyG,KAAK,YAAazD,GAC1B7C,EAAG,UAAM2F,EAAN,YAAqB9C,IALtB,kBAQG8B,GAAY3E,GAAK,SAACqF,GAAD,OAAOA,EAAExH,WAR7B,2CAAF,mDAAC,ICnEF,IAAM0I,GAAU,IAAI5H,MAAM,WCW3B6H,GAAY,SAChBnL,EACAgC,GAEA,OAAOhC,EAAMwD,KAAKxB,OAASA,GAiBhBoJ,GAAU,SAACL,GAAD,MACJ,UAAjBA,EAAQ/I,MAMJqJ,GAAU,I,WDlCd,aAAwD,IAApCf,EAAmC,uDAArB,oBAAqB,yBAAnCA,cAAmC,KAF/CgB,iBAE+C,OAE/CC,eAAiB,E,4FAEZ/M,G,mGACLgJ,IAAOf,KAAK8E,eACZC,EAAQC,KAAKC,OAEbC,EAAQ,WACZ,GAAInE,IAAO,EAAK+D,eACd,MAAML,OAMJU,EAAgB,SAACpE,GAAD,OAAgBhJ,EAAMqN,MAAK,SAAC/I,GAAD,MAAO,YAAKA,EAAEvE,QAAWiJ,M,SAEpDsE,iBAA2B,CAC/CC,MAAOjE,GACPQ,MAAO7B,KAAK6E,YACZU,OAAQ,SAACC,GACPzH,QAAQyG,KAAKgB,IAEfC,QAAS,CACP,CACE3N,KAAM,SACN2J,UAFF,WAII,OADAyD,IACO,MAETvD,KANF,WAQI,OADAuD,IACO,OAIX3D,GAAYxJ,EAAM,IAClB,CACED,KAAM,aACN2J,UAFF,SAEYV,GACR,OAAOoE,EAAcpE,GAAMA,EAAK,MAElCY,KALF,SAKOZ,GAAK,IAAD,EACP,OAAO,UAAAoE,EAAcpE,UAAd,eAAmB/I,WAAY,OAG1C0N,YAAQ,CACNC,OAAQ,CACN,uBAAwB,kBAG5BC,YAAS,IACThC,GAAM,CACJC,YAAa7D,KAAK6D,YAClBC,QAAS,CACP+B,MAAO,CAAErE,MAAO,8BAA+B0C,OAAQ,SACvD,YAAa,CAAE1C,MAAO,kCAAmC0C,OAAQ,YACjE,oBAAqB,CACnB1C,MAAO,oCACP0C,OAAQ,cAEV4B,QAAS,CAAEtE,MAAO,sBAAuB0C,OAAQ,cAGrDvD,GAAM,CACJC,QAAS,SAACG,GAAD,QAAUoE,EAAcpE,IAAOI,GAAWJ,S,cAhDnDxD,E,OAqDN2H,IAEAlF,KAAK6E,YAActH,EAAOsE,M,UAIhBtE,EAAOwI,SAAS,CACxBC,OAAQ,OACRlO,KAAM,Y,wCAHNmO,O,GAASC,E,KAMXhB,I,kBAEO,CACLnE,KACAxD,OAAQ2I,EACRC,MAAO,CACLC,SAAUpB,KAAKC,MAAQF,K,gHCpD/BsB,UAAS,uCAAG,WAAO9M,GAAP,eAAA+J,EAAA,yDACVvF,QAAQuI,KAAK,WAAY/M,EAAMwD,KAAKxB,KAAM,UAAWhC,IAEjDmL,GAAUnL,EAAO,UAHX,0CAKeqL,GAAQrH,OAAOhE,EAAMwD,KAAKhF,OAAO4K,OAAM,SAACC,GAC3D,GAAIA,IAAU6B,GAGd,MADA1G,QAAQ6E,MAAM,cACRA,KATF,OAKA7D,EALA,OAYN2B,YAAY,CACVnF,KAAM,SACNoE,IAAKpG,EAAMwD,KAAK4C,IAChBZ,WAfI,gDAkBNhB,QAAQC,IAAIiE,OAAOsE,YAAYtE,OAAO6B,QAAP,QAC/BpD,YAAY,CACVnF,KAAM,QACNoE,IAAKpG,EAAMwD,KAAK4C,IAChBiD,MAAM,aACJ0B,QAAS,KAAMA,QACfkC,MAAO,KAAMA,OACVvE,OAAOsE,YAAYtE,OAAO6B,QAAP,UAzBpB,yDAAH,sD,cCpDH7L,GAAYC,aAAW,SAACkD,GAAD,MAAY,CACvCqL,KAAM,CACJ3L,KAAM,EACN4L,QAAS,OACTC,cAAe,SACf9L,OAAQ,QAEV+L,QAAS,CACP9L,KAAM,EACN/B,SAAU,WACV2N,QAAS,OACTC,cAAe,SACfE,SAAU,QAEZzE,OAAQ,CACNhK,SAAU,EACVW,SAAU,WACV+N,gBAAiB1L,EAAME,QAAQyL,WAAWC,OAE5CC,MAAO,CACLC,QAAS,YACTC,WAAY,WACZC,UAAW,UAEb9I,KAAM,CACJ+I,WAAY,YACZD,UAAW,QAEbxE,MAAO,CACLkE,gBAAiB1L,EAAME,QAAQsH,MAAM0E,MACrCjO,MAAO+B,EAAME,QAAQsH,MAAM2E,cAE7BjB,KAAM,GAGNkB,SAAU,CACRd,QAAS,OACTe,eAAgB,SAChBC,WAAY,UAGdC,QAAS,GAGTC,WAAY,CACV3K,MAAO,aAYI,SAAS4K,GAAT,GAAmE,IAA/CC,EAA8C,EAA9CA,SAAUlF,EAAoC,EAApCA,MAAemF,EAAqB,EAA7B3F,OAC5C3J,EAAUR,KAEVmK,EAAiCQ,EACnC,CAAEoF,SAAU,QAASjM,KAAM6G,EAAM0B,SACjCyD,EAEEE,EAAmBrF,GAASA,EAAM0B,QAAQ4D,MAAM,MAAMC,OAAS,EAErE,OACE,yBAAKhP,UAAWV,EAAQgO,MACtB,yBAAKtN,UAAWV,EAAQmO,SAAUkB,GAClC,yBAAK3O,UAAWV,EAAQ2J,QACrBA,GACC,yBACEjJ,UAAW,CACTV,EAAQwO,MACRgB,EAAmBxP,EAAQ6F,KAAO,GAClC7F,EAAQ2J,EAAO4F,WACf7J,KAAK,MAEc,aAApBiE,EAAO4F,UACN,oCACE,kBAACI,GAAA,EAAD,CAAkBC,KAAK,MAAMhP,MAAM,cACnC,yBAAKF,UAAWV,EAAQmP,cAG3BxF,EAAOrG,QCtEb,IAAM8B,GAAiByK,wBAAc,CAC1CtJ,UAAW,SAACoD,OAGRnK,GAAYC,aAAW,iBAAO,CAClCqQ,KAAM,CACJxP,SAAU,WACV8B,OAAQ,0BAUG,SAAS2N,GAAT,GAAmC,IAAnBxO,EAAkB,EAAlBA,QACvBvB,EAAUR,KAD+B,EC1BlC,YAIC,IAAD,IAHbwQ,eAGa,MAHHC,aAGG,EAFbxO,EAEa,EAFbA,IACAyO,EACa,EADbA,aACa,EACajQ,oBAAY,WACpC,IAAMkQ,EAASH,EAAQI,QAAQ3O,GAC/B,OAAO0O,EAASxK,KAAK0K,MAAMF,GAAUD,KAH1B,mBACNI,EADM,KACCC,EADD,KAWb,MAAO,CAACD,EALR,SAAwBE,GACtBR,EAAQS,QAAQhP,EAAKkE,KAAKC,UAAU4K,IACpCD,EAASC,KDgBeE,CAA2B,CACnDjP,IAAK,aACLyO,aAAc7O,EAAS,GAAG/B,QAJmB,mBAExCA,EAFwC,KAEjCqR,EAFiC,OAMT1Q,mBAAkB,IANT,mBAMxC2Q,EANwC,KAM3BC,EAN2B,OAOL5Q,qBAPK,mBAOxC6Q,EAPwC,KAOzBC,EAPyB,OAQL9Q,qBARK,mBAQxC+Q,EARwC,KAQzBC,EARyB,OASLhR,qBATK,mBASxCiR,EATwC,KASzBC,EATyB,KAW/C9L,qBAAU,WACJ9D,GACFoP,EAASpP,EAAQjC,SAElB,CAACiC,EAASoP,IAEbtL,qBAAU,WACRC,QAAQC,IAAR,iBAAsBjG,EAAMgC,KAAI,SAACsC,GAAD,OAAOA,EAAEvE,QAAMqG,KAAK,SACnD,CAACpG,IAEJ,IAAM6M,EAAUlH,mBAwDhB,OAvDAI,qBAAU,WACR8G,EAAQ3F,QAAU,IAAIW,IACrB,IAEH9B,qBAAU,WACR,IAAI+L,GAAY,EADF,4CAMd,4BAAAvG,EAAA,0DACMuG,EADN,wDAGEP,EAAe,IACfE,EAAiB,CAAExB,SAAU,WAAYjM,KAAM,0BAE/CgC,QAAQuI,KAAK,0BANf,SAOuB1B,EAAQ3F,QAAS1B,OAAOxF,GAP/C,UAOQgH,EAPR,QASM8K,EATN,mDAUMlF,GAAQ5F,IACVhB,QAAQ6E,MAAM,kBAAmB7D,EAAO6D,OACxC0G,EAAe,CAACvK,EAAO6D,SACd7D,EAAOA,SAChBhB,QAAQC,IAAIe,EAAOA,QACnBhB,QAAQuI,KAAK,sBAAuBvH,EAAOA,OAAOoH,MAAMC,SAAU,gBAElEwD,EAAiB7K,EAAOA,QACxByK,EAAiB,CACfxB,SAAU,UACVjM,KAAK,cAAD,OAAgBgD,EAAOA,OAAOoH,MAAMC,SAApC,SApBV,6CANc,sBAkCd,OAHAoD,EAAiB,CAAExB,SAAU,OAAQjM,KAAM,kBAC3C+N,YAhCc,4CAhCD,KAkCE,WACbD,GAAY,KAgCb,CAAC9R,IAEJ+F,qBAAU,WACR4L,EAAiB,CACf1B,SAAU,OACVjM,KAAM,yBAEP,IAUD,yBAAK5C,UAAWV,EAAQ8P,MACtB,kBAAC,IAAD,CAAWL,MAAM,YACf,kBAACL,GAAD,CAAUjF,MAAK,OAAEyG,QAAF,IAAEA,OAAF,EAAEA,EAAc,GAAIjH,OAAQmH,GACzC,kBAACvN,EAAD,CAAWjE,MAAOA,EAAOkD,SAAUmO,KAErC,kBAACvB,GAAD,CAAUzF,OAAQqH,GAChB,kBAAC5L,GAAekM,SAAhB,CAAyBvP,MAAO,CAAEwE,UAd1C,SAA6BoD,GAC3BsH,EAAiB,CACf1B,SAA0B,UAAhB5F,EAAO7G,KAAmB,QAAU,UAC9CQ,KAAsB,UAAhBqG,EAAO7G,KAAmB6G,EAAOQ,MAAM0B,QAAvC,oBAA8DlC,EAAO+D,MAAMC,SAA3E,WAYA,kBAAC9G,EAAD,CAAY/B,OAAQoM,QEhFjBK,OAhCf,WAAgB,IACCC,EAAoBzR,cAA3BgC,MACFY,EAAQ8O,mBACZ,kBACEC,YAAe,CACb7O,QAAS,CACPC,KAAM0O,EAAkB,OAAS,QACjCG,QAAS,CACPzG,KAAM,mBAER0G,UAAW,CACT1G,KAAM,yBAId,CAACsG,IAfU,EAkBiBvR,qBAlBjB,mBAkBNsB,EAlBM,KAkBGsQ,EAlBH,KAuBb,OACE,kBAACC,EAAA,EAAD,CAAenP,MAAOA,GACpB,kBAACoP,EAAA,EAAD,MACA,kBAACnS,EAAD,CAAQC,gBAPZ,SAAgC0B,GAC9BsQ,EAAWtQ,MAOT,kBAACwO,GAAD,CAAMxO,QAASA,MCpBNyQ,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjI,MAAK,YAAkD,IAA/CkI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCJdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.04a25047.chunk.js","sourcesContent":["import type { ReplFile } from '../components/repl';\nimport basic from './basic';\nimport chart from './chart';\n\nexport type Example = {\n  name: string;\n  files: ReplFile[];\n};\n\nexport default [basic, chart] as Example[];\n","/* eslint-disable import/no-webpack-loader-syntax */\n// @ts-ignore\nimport appSource from '!!raw-loader!./app.jsx';\n\nexport default {\n  name: 'Basic usage',\n  files: [\n    {\n      name: 'app.jsx',\n      contents: appSource,\n    },\n  ],\n};\n","export default \"import React from 'react';\\nimport { useSubscription } from '@atvise/webmi-react';\\n\\nfunction MyLabel(props) {\\n  const { loading, data, error } = useSubscription(props.address);\\n\\n  if (loading) return <i>loading...</i>;\\n  if (error) return <i>An error ocurred: {error.message}</i>;\\n\\n  return <span>AGENT.OBJECTS.test currently is: {data.value.toFixed(2)}</span>;\\n}\\n\\nexport default function App() {\\n  return (\\n    <p>\\n      <MyLabel address=\\\"AGENT.OBJECTS.SimulatedData.double_1\\\" />\\n    </p>\\n  );\\n}\\n\";","/* eslint-disable import/no-webpack-loader-syntax */\n// @ts-ignore\nimport appSource from '!!raw-loader!./app.jsx';\n\nexport default {\n  name: 'Chart',\n  files: [\n    {\n      name: 'app.jsx',\n      contents: appSource,\n    },\n  ],\n};\n","export default \"import React, { useState, useEffect } from 'react';\\nimport { useSubscription } from '@atvise/webmi-react';\\nimport { VictoryChart, VictoryTheme, VictoryLine } from 'victory';\\n\\n/** A hook that collects values of the given variable */\\nfunction useCollectedSamples(address) {\\n  const [samples, setSamples] = useState([]);\\n  const { loading, data, error } = useSubscription(address);\\n\\n  useEffect(() => {\\n    if (data && (!samples.length || data.value !== samples[samples.length - 1].y)) {\\n      setSamples([...samples, { x: new Date(data.timestamp), y: data.value }]);\\n    }\\n  }, [data, samples]);\\n\\n  return { loading, data: samples, error };\\n}\\n\\nfunction Chart() {\\n  const double1 = useCollectedSamples('AGENT.OBJECTS.SimulatedData.double_1');\\n  const double2 = useCollectedSamples('AGENT.OBJECTS.SimulatedData.double_2');\\n\\n  if (double1.error || double2.error)\\n    return <i>An error ocurred: {(double1.error || double2.error).message}</i>;\\n  if (double1.data.length < 2 || double2.data.length < 2) return <i>loading...</i>;\\n\\n  return (\\n    <VictoryChart theme={VictoryTheme.material} animate={{ duration: 200, easing: 'quadInOut' }}>\\n      <VictoryLine data={double1.data} />\\n      <VictoryLine data={double2.data} />\\n    </VictoryChart>\\n  );\\n}\\n\\nexport default function App() {\\n  return <Chart />;\\n}\\n\";","import React, { useState } from 'react';\nimport {\n  AppBar,\n  Button,\n  IconButton,\n  makeStyles,\n  Toolbar,\n  Tooltip,\n  Typography,\n  Menu,\n  MenuItem,\n} from '@material-ui/core';\nimport { Brightness3, WbSunny } from '@material-ui/icons';\nimport useDarkMode from 'use-dark-mode';\nimport examples, { Example } from '../../examples';\n\nconst useStyles = makeStyles({\n  space: {\n    flexGrow: 1,\n  },\n});\n\ninterface Props {\n  onSelectExample: (example: Example) => void;\n}\n\nexport default function Header({ onSelectExample }: Props) {\n  const darkMode = useDarkMode();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) =>\n    setAnchorEl(event.currentTarget);\n\n  const handleClose = () => setAnchorEl(null);\n\n  const selectExample = (example: Example) => {\n    onSelectExample(example);\n    handleClose();\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\">webMI React Playground</Typography>\n\n        <div className={classes.space}></div>\n\n        <Button color=\"inherit\" onClick={handleClick}>\n          Select an example\n        </Button>\n        <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n          {examples.map((example) => (\n            <MenuItem key={example.name} onClick={() => selectExample(example)}>\n              {example.name}\n            </MenuItem>\n          ))}\n        </Menu>\n\n        <Tooltip title=\"Toggle dark mode\">\n          <IconButton color=\"inherit\" onClick={darkMode.toggle}>\n            {darkMode.value ? <Brightness3 /> : <WbSunny />}\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { Controlled as CodeMirror } from 'react-codemirror2';\n\nimport './CodeMirror.css';\nimport 'codemirror/mode/javascript/javascript.js';\n// import 'codemirror/mode/shell/shell.js';\n// import 'codemirror/mode/handlebars/handlebars.js';\n// import 'codemirror/mode/htmlmixed/htmlmixed.js';\n// import 'codemirror/mode/xml/xml.js';\n// import 'codemirror/mode/css/css.js';\n// import 'codemirror/mode/markdown/markdown.js';\nimport 'codemirror/mode/jsx/jsx';\n// import 'codemirror/addon/edit/closebrackets.js';\n// import 'codemirror/addon/edit/closetag.js';\n// import 'codemirror/addon/edit/continuelist.js';\nimport 'codemirror/addon/comment/comment.js';\n// import 'codemirror/addon/fold/foldcode.js';\n// import 'codemirror/addon/fold/foldgutter.js';\n// import 'codemirror/addon/fold/brace-fold.js';\n// import 'codemirror/addon/fold/xml-fold.js';\n// import 'codemirror/addon/fold/indent-fold.js';\n// import 'codemirror/addon/fold/markdown-fold.js';\n// import 'codemirror/addon/fold/comment-fold.js';\n\nexport type Mode = 'jsx';\n\nexport default CodeMirror;\n","import React, { useCallback } from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core';\nimport CodeMirror, { Mode } from './CodeMirror';\n\nconst useStyles = makeStyles(() => ({\n  codemirror: {\n    height: '100%',\n    flex: 1,\n  },\n}));\n\ntype Props = {\n  mode: Mode;\n  value: string;\n} & ({ onChange: (text: string) => void; readOnly?: false } | { onChange?: never; readOnly: true });\n\nexport default function Editor({ mode, value, onChange, readOnly }: Props) {\n  const classes = useStyles();\n  const {\n    palette: { type: theme },\n  } = useTheme();\n\n  const options = {\n    mode,\n    theme: theme === 'dark' ? 'monokai' : 'default',\n    lineNumbers: true,\n    readOnly,\n    gutters: ['CodeMirror-lint-markers'],\n    lint: true,\n  };\n\n  const onBeforeChange = useCallback((_, __, text) => onChange?.(text), [onChange]);\n\n  return (\n    <CodeMirror\n      className={classes.codemirror}\n      value={value}\n      options={options}\n      onBeforeChange={onBeforeChange}\n    />\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport { Tab, Tabs } from '@material-ui/core';\nimport Editor from '../utils/Editor';\nimport type { ReplFile } from '.';\n\ntype Props = {\n  files: ReplFile[];\n  onChange: (files: ReplFile[]) => void;\n};\n\nexport default function ReplInput({ files, onChange }: Props) {\n  const [selectedFileIndex, setSelectedFileIndex] = useState(0);\n  const selectedFile = files[selectedFileIndex];\n\n  const updateFile = useCallback(\n    (contents: string) => {\n      onChange(files.map((f, i) => (i === selectedFileIndex ? { ...f, contents } : f)));\n    },\n    [files, selectedFileIndex, onChange]\n  );\n\n  return (\n    <>\n      <Tabs value={selectedFileIndex} onChange={(_, value) => setSelectedFileIndex(value)}>\n        {files.map((file) => (\n          <Tab key={file.name} label={file.name} />\n        ))}\n      </Tabs>\n\n      <Editor mode=\"jsx\" value={selectedFile.contents} onChange={updateFile} />\n    </>\n  );\n}\n","/**\n * Registers an event handler. Can be used with DOM elements as well as with webMI internal modules\n * (such as webMI.data).\n * @param target The event target.\n * @param name The event to handle.\n * @param handler The event handler.\n */\nfunction addEvent(target, name, handler) {\n    var active = true;\n    webMI.addEvent(target, name, function (e) {\n        if (!active)\n            return;\n        handler(e);\n    });\n    // NOTE: webMI.removeEvent is not implemented for all events 🙄\n    // We call it with the same signature as addEvent, but don't rely on it to work.\n    return function () {\n        active = false;\n        webMI.removeEvent(target, name, handler);\n    };\n}\n\n/* eslint-disable import/prefer-default-export */\n/// <reference types=\"@atvise/types-webmi\" />\nfunction getWebMI() {\n    if (!window.webMI) {\n        throw new Error(\"No webmi detected. Is your atvise server running?\");\n    }\n    return window.webMI;\n}\n\nvar webmiData = getWebMI().data;\nfunction isErrorResult(result) {\n    return result.error;\n}\nvar createDataError = function (result) {\n    return Object.assign(new Error(result.errorstring), { code: result.error });\n};\nfunction resultCallback(resolve, reject) {\n    return function (result) {\n        if (isErrorResult(result)) {\n            reject(createDataError(result));\n        }\n        else {\n            resolve(result);\n        }\n    };\n}\nfunction promisifyDataCall(fn) {\n    return new Promise(function (resolve, reject) { return fn(resultCallback(resolve, reject)); });\n}\nfunction read(address) {\n    return promisifyDataCall(function (cb) { return webmiData.read(address, cb); });\n}\nfunction write(address, value) {\n    return promisifyDataCall(function (cb) { return webmiData.write(address, value, cb); });\n}\nfunction call(name, args) {\n    return promisifyDataCall(function (cb) { return webmiData.call(name, args, cb); });\n}\nvar isLoginErrorResult = function (result) { return Object.prototype.hasOwnProperty.call(result, 'error'); };\nvar isLoginSuccessResult = function (result) { return !isLoginErrorResult(result) && !!result.username; };\nfunction login(username, password) {\n    return new Promise(function (resolve, reject) {\n        webmiData.login(username, password, function (_a) {\n            var result = _a[\"\"];\n            if (isLoginErrorResult(result))\n                reject(new Error(result.error));\n            else\n                resolve(isLoginSuccessResult(result) ? result : null);\n        });\n    });\n}\nfunction logout() {\n    return new Promise(function (resolve) { return webmiData.logout(resolve); });\n}\nvar addDataEvent = function (name, callback) { return addEvent(webmiData, name, callback); };\nfunction subscribe(address, onResult) {\n    var subscription = webmiData.subscribe(address, function (result) {\n        return onResult(isErrorResult(result) ? { error: createDataError(result) } : { data: result });\n    });\n    return {\n        cancel: function () { return webmiData.unsubscribe(subscription); }\n    };\n}\n\nexport { addDataEvent, addEvent, call, login, logout, read, subscribe, write };\n//# sourceMappingURL=index.mjs.map\n","import { makeStyles, Fab } from '@material-ui/core';\nimport { Refresh } from '@material-ui/icons';\nimport React, { SyntheticEvent, useContext, useEffect, useRef, useState } from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport '@atvise/webmi-react'; // Needed for webmi data calls in preview frame\nimport { BundlerResult } from '../../../bundler/Bundler';\nimport { PreviewContext, PreviewStatus } from '../../pages/Repl';\n\ntype Props = {\n  bundle?: BundlerResult;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  iframe: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\ntype PreviewContext = typeof window & {\n  result: PreviewStatus;\n};\n\nexport default function ReplPreview({ bundle }: Props) {\n  const darkMode = useDarkMode();\n  const classes = useStyles();\n  const [srcDoc, setSrcDoc] = useState('');\n  const iframe = useRef<HTMLIFrameElement>(null);\n  const preview = useContext(PreviewContext);\n\n  function handleOnload(e: SyntheticEvent<HTMLIFrameElement, Event>) {\n    const previewContext = (e.target as HTMLIFrameElement).contentWindow! as PreviewContext;\n\n    console.log('Preview loaded');\n\n    if (previewContext.result) {\n      preview.setStatus(previewContext.result);\n\n      // At this point we could inject the preview console:\n      // (previewContext as any).console = {\n      //   ...(previewContext as any).console,\n      //   log: console.log.bind(console, 'preview'),\n      // };\n    }\n  }\n\n  useEffect(() => {\n    if (!bundle) return console.log('Preview is out of date');\n\n    setSrcDoc(`\n<html>\n<head>\n  <title>Preview</title>\n</head>\n<body>\n  <div id=\"root\"></div>\n\n  <!-- Dependencies -->\n  <script src=\"/webmi.js\"></script>\n  ${bundle.bundle.imports.map((url) => `<script src=\"${url}\"></script>`).join('\\n  ')}\n\n  <!-- State hydration -->\n  <script>\n    var replSettings = ${JSON.stringify({ darkMode })}\n  </script>\n\n  <!-- App -->\n  <script>\n    ${bundle.bundle.code}\n  </script>\n</body>\n</html>`);\n  }, [bundle, darkMode]);\n\n  return (\n    <>\n      <iframe\n        src=\"http://localhost:3000\"\n        className={classes.iframe}\n        frameBorder=\"0\"\n        title=\"Preview\"\n        srcDoc={srcDoc}\n        ref={iframe}\n        onLoad={handleOnload}\n      ></iframe>\n\n      {iframe.current && (\n        <Fab\n          color=\"primary\"\n          className={classes.fab}\n          onClick={() => iframe.current?.contentWindow?.location.reload()}\n        >\n          <Refresh />\n        </Fab>\n      )}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { Tab, Tabs } from '@material-ui/core';\nimport ReplPreview from './output/Preview';\nimport type { BundlerResult } from '../../bundler/Bundler';\n\ntype Props = {\n  bundle?: BundlerResult;\n};\n\nexport default function ReplOutput({ bundle }: Props) {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  return (\n    <>\n      <Tabs value={selectedTab} onChange={(_, value) => setSelectedTab(value)}>\n        <Tab label=\"Preview\" />\n      </Tabs>\n\n      <ReplPreview bundle={bundle} />\n    </>\n  );\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\n// @ts-ignore\nimport BundlerWorker from 'worker-loader!../workers/bundle';\n/* eslint-enable import/no-webpack-loader-syntax */\nimport type { ReplFile } from '../components/repl';\nimport type { BundlerOutputMessage, BundlerWorkerInterface } from '../workers/bundle';\n\nlet worker: BundlerWorkerInterface;\n\nlet uid = 0;\n\nexport default class BundlerController {\n  private handlers = new Map<number, (data: BundlerOutputMessage) => void>();\n  private worker: BundlerWorkerInterface;\n\n  constructor() {\n    if (!worker) worker = new BundlerWorker();\n    this.worker = worker;\n\n    this.worker.addEventListener('message', (event) => {\n      const handler = this.handlers.get(event.data.uid);\n\n      if (handler) {\n        handler(event.data);\n\n        if (event.data.type === 'result') {\n          this.handlers.delete(event.data.uid);\n        }\n      }\n    });\n  }\n\n  bundle(files: ReplFile[]) {\n    const buildUid = ++uid;\n\n    return new Promise<BundlerOutputMessage>((resolve, reject) => {\n      this.handlers.set(buildUid, resolve);\n      this.worker.postMessage({ type: 'bundle', uid: buildUid, files });\n    });\n  }\n}\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/bundle.c24ae3d3.worker.js\");\n}\n","import { transform } from '@babel/standalone';\nimport type { Plugin } from 'rollup';\n\nexport default function babel({ include }: { include: (id: string) => boolean }) {\n  return {\n    name: 'babel',\n    transform(source, id) {\n      if (!include(id)) return null;\n\n      const result = transform(source, { presets: ['react', ['env', { modules: false }]] });\n      return { code: result.code!, map: result.map! };\n    },\n  } as Plugin;\n}\n","import type { Plugin } from 'rollup';\nimport type { ReplFile } from '../../components/repl';\n\nconst replId = (name: string) => `@repl/${name}`;\nexport const isReplFile = (id: string) => id.startsWith('@repl/');\n\nexport const inputId = replId('input');\nconst runtimeId = replId('runtime.jsx');\n\nconst runtime = `\nimport React, { useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, CssBaseline, ThemeProvider, Container } from '@material-ui/core';\n\nexport function StyledApp({ children }) {\n  const { value: prefersDarkMode } = window.replSettings.darkMode;\n  const theme = useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? 'dark' : 'light',\n    },\n  }), []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container>\n        {children}\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport function runApp(App, target) {\n  try {\n    const start = Date.now();\n\n    ReactDOM.render((\n      <StyledApp>\n        <App />\n      </StyledApp>\n    ), target);\n    window.result = { type: 'ready', stats: { duration: Date.now() - start } };\n  } catch (error) {\n    console.error(error);\n    window.result = { type: 'error', error };\n  }\n}\n`;\n\nexport default function replRuntime(entry: ReplFile) {\n  const files = new Map<string, string>([\n    [runtimeId, runtime],\n    [\n      inputId,\n      `import { runApp } from '${runtimeId}';\nimport App from './${entry.name}';\n\nrunApp(App, document.getElementById('root'));\n`,\n    ],\n  ]);\n\n  return {\n    name: 'repl-runtime',\n    resolveId(id) {\n      return files.has(id) ? id : null;\n    },\n    load(id) {\n      return files.get(id);\n    },\n  } as Plugin;\n}\n","const responseCache = new Map<string, Promise<Response>>();\nconst cache = new Map<string, Promise<any>>();\n\ntype ResponseHandler<T> = (response: Response) => T | Promise<T>;\n\nconst checkFetchResponse = (response: Response) => {\n  if (!response.ok)\n    throw Object.assign(new Error(response.statusText || `Status ${response.status}`), {\n      url: response.url,\n    });\n\n  return response;\n};\n\nexport function fetchCachedResponse(url: string) {\n  if (responseCache.has(url)) {\n    return responseCache.get(url)!;\n  }\n\n  const promise = fetch(url, { redirect: 'follow', method: 'HEAD' })\n    .then(checkFetchResponse)\n    .catch((error) => {\n      responseCache.delete(url);\n      throw error;\n    });\n  responseCache.set(url, promise);\n\n  return promise;\n}\n\nexport function fetchCached<T>(path: string, handleResponse: ResponseHandler<T>) {\n  if (cache.has(path)) {\n    return cache.get(path)! as Promise<T>;\n  }\n\n  const operation = fetch(path, { redirect: 'follow' })\n    .then(checkFetchResponse)\n    .then(handleResponse)\n    .catch((error) => {\n      cache.delete(path);\n      throw error;\n    });\n  cache.set(path, operation);\n\n  return operation;\n}\n","import type { Plugin } from 'rollup';\nimport { fetchCachedResponse, fetchCached } from '../fetchCached';\n\nexport const isUrl = (id: string) => id.startsWith('https:') || id.startsWith('http:');\nexport const isFile = (id: string) => /\\.[a-z]+$/.test(id);\n\nasync function resolvePackageEntry(base: string) {\n  const manifest = await fetchCached(`${base}/package.json`, (r) => r.json());\n  return manifest.module || manifest.main;\n}\n\ntype Entry = {\n  entry: string;\n  global: string;\n};\n\ntype ResolvedEntry = Entry & { url: string };\n\nexport default function cdnjs({\n  packagesUrl,\n  entries = {},\n}: {\n  packagesUrl: string;\n  entries?: { [id: string]: { entry: string; global: string } };\n}) {\n  const globals: { [url: string]: string } = {};\n\n  // Populate urls\n  for (const [name, entry] of Object.entries(entries)) {\n    const url = new URL(entry.entry, `${packagesUrl}/${name}/`).href;\n    (entry as ResolvedEntry).url = url;\n    globals[url] = entry.global;\n  }\n\n  return {\n    name: 'cdnjs',\n    async resolveId(id, importer) {\n      let url: string;\n\n      console.log('Resolving', id, 'from', importer);\n\n      if (entries[id]) {\n        return { id: (entries[id] as ResolvedEntry).url, external: true };\n      } else if (isUrl(id)) {\n        url = id;\n      } else if (id.startsWith('.')) {\n        if (!importer) return null;\n\n        url = new URL(id, isFile(importer) ? importer : `${importer}/`).href;\n      } else {\n        url = `${packagesUrl}/${id}`;\n        if (id.match(/\\//) && !id.match(/^@[^/]+\\/[^/]+$/)) {\n          // Got a path for an id, no need to load package.json\n          // url = base;\n        } else {\n          const entry = await resolvePackageEntry(url);\n\n          if (entry) {\n            url = new URL(entry, `${url}/`).href;\n          }\n        }\n      }\n\n      if (!isFile(url)) {\n        try {\n          return (await fetchCachedResponse(url)).url;\n        } catch (error) {\n          throw new Error(\n            `Unable to resolve '${id}' from '${importer}': ${error.message} (${\n              error.url || 'no url'\n            })`\n          );\n        }\n      }\n\n      return url;\n    },\n    outputOptions: (options) => ({\n      ...options,\n      globals: { ...globals, ...(options.globals || {}) },\n    }),\n    load: async (id) => {\n      let url = id;\n\n      if (!isUrl(id)) {\n        console.warn('Not a url', id);\n        url = `${packagesUrl}/${id}`;\n      }\n\n      return fetchCached(url, (r) => r.text());\n    },\n  } as Plugin;\n}\n","import { rollup } from 'rollup/dist/rollup.browser';\nimport type { rollup as rollupFn, RollupCache, OutputChunk } from 'rollup';\nimport commonjs from '@rollup/plugin-commonjs';\nimport replace from '@rollup/plugin-replace';\nimport type { ReplFile } from '../components/repl';\nimport babel from './plugins/babel';\nimport replRuntime, { inputId, isReplFile } from './plugins/repl-runtime';\nimport cdnjs from './plugins/cdnjs';\n\nexport type BundlerResult = {\n  bundle: OutputChunk;\n  stats: { duration: number };\n};\n\nexport const aborted = new Error('Aborted');\n\nexport default class Bundler {\n  private rollupCache?: RollupCache;\n\n  constructor(private packagesUrl = 'https://unpkg.com') {}\n\n  private currentBuildId = 0;\n\n  async bundle(files: ReplFile[]) {\n    const id = ++this.currentBuildId;\n    const start = Date.now();\n\n    const abort = () => {\n      if (id !== this.currentBuildId) {\n        throw aborted;\n      }\n    };\n\n    abort();\n\n    const getSourceFile = (id: string) => files.find((f) => `./${f.name}` === id);\n\n    const bundle = await (rollup as typeof rollupFn)({\n      input: inputId,\n      cache: this.rollupCache,\n      onwarn: (warning) => {\n        console.warn(warning);\n      },\n      plugins: [\n        {\n          name: 'cancel',\n          resolveId() {\n            abort();\n            return null;\n          },\n          load() {\n            abort();\n            return null;\n          },\n        },\n\n        replRuntime(files[0]),\n        {\n          name: 'repl-files',\n          resolveId(id) {\n            return getSourceFile(id) ? id : null;\n          },\n          load(id) {\n            return getSourceFile(id)?.contents || null;\n          },\n        },\n        replace({\n          values: {\n            'process.env.NODE_ENV': '\"production\"',\n          },\n        }),\n        commonjs({}),\n        cdnjs({\n          packagesUrl: this.packagesUrl,\n          entries: {\n            react: { entry: 'umd/react.production.min.js', global: 'React' },\n            'react-dom': { entry: 'umd/react-dom.production.min.js', global: 'ReactDOM' },\n            '@material-ui/core': {\n              entry: 'umd/material-ui.production.min.js',\n              global: 'MaterialUI',\n            },\n            victory: { entry: 'dist/victory.min.js', global: 'Victory' },\n          },\n        }),\n        babel({\n          include: (id) => !!getSourceFile(id) || isReplFile(id),\n        }),\n      ],\n    });\n\n    abort();\n\n    this.rollupCache = bundle.cache;\n\n    const {\n      output: [chunk],\n    } = await bundle.generate({\n      format: 'iife',\n      name: 'replApp',\n    });\n\n    abort();\n\n    return {\n      id,\n      bundle: chunk,\n      stats: {\n        duration: Date.now() - start,\n      },\n    };\n  }\n}\n","/// <reference lib=\"webworker\" />\n\nimport Bundler, { aborted } from '../bundler/Bundler';\nimport type { BundlerResult } from '../bundler/Bundler';\nimport type { ReplFile } from '../components/repl';\n\nexport type BundlerStartMessage = {\n  type: 'bundle';\n  uid: number;\n  files: ReplFile[];\n};\n\nexport type BundlerCancelMessage = { type: 'cancel'; uid: number };\n\ntype BundlerInputMessageMap = {\n  bundle: BundlerStartMessage;\n  cancel: BundlerCancelMessage;\n};\n\nexport type BundlerInputMessage = {\n  [T in keyof BundlerInputMessageMap]: BundlerInputMessageMap[T];\n}[keyof BundlerInputMessageMap];\n\ntype BundlerInputMessageEvent = { data: BundlerInputMessage };\n\nconst isMessage = <T extends keyof BundlerInputMessageMap>(\n  event: BundlerInputMessageEvent,\n  type: T\n): event is { data: BundlerInputMessageMap[T] } => {\n  return event.data.type === type;\n};\n\nexport type BundlerResultMessage = {\n  type: 'result';\n  uid: number;\n  result?: BundlerResult;\n};\n\nexport type BundlerErrorMessage = {\n  type: 'error';\n  uid: number;\n  error: Error;\n};\n\nexport type BundlerOutputMessage = BundlerResultMessage | BundlerErrorMessage;\n\nexport const isError = (message: BundlerOutputMessage): message is BundlerErrorMessage =>\n  message.type === 'error';\n\nexport interface BundlerWorkerInterface extends Worker {\n  postMessage(message: BundlerInputMessage): void;\n}\n\nconst bundler = new Bundler();\n\nonmessage = async (event: BundlerInputMessageEvent) => {\n  console.info('Received', event.data.type, 'message', event);\n\n  if (isMessage(event, 'bundle')) {\n    try {\n      const result = await bundler.bundle(event.data.files).catch((error) => {\n        if (error === aborted) return undefined;\n\n        console.error('Rethrowing');\n        throw error;\n      });\n\n      postMessage({\n        type: 'result',\n        uid: event.data.uid,\n        result,\n      } as BundlerResultMessage);\n    } catch (error) {\n      console.log(Object.fromEntries(Object.entries(error)));\n      postMessage({\n        type: 'error',\n        uid: event.data.uid,\n        error: ({\n          message: error.message,\n          stack: error.stack,\n          ...Object.fromEntries(Object.entries(error)),\n        } as unknown) as Error,\n      } as BundlerErrorMessage);\n    }\n  }\n};\n","import React, { ReactNode } from 'react';\nimport { makeStyles, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  pane: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  content: {\n    flex: 1,\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n  },\n  status: {\n    flexGrow: 0,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n  },\n  alert: {\n    padding: '0.5em 1em',\n    whiteSpace: 'pre-wrap',\n    textAlign: 'center',\n  },\n  code: {\n    fontFamily: 'monospace',\n    textAlign: 'left',\n  },\n  error: {\n    backgroundColor: theme.palette.error.light,\n    color: theme.palette.error.contrastText,\n  },\n  info: {\n    /* We could alter color or background here... */\n  },\n  progress: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    /* We could alter color or background here... */\n  },\n  success: {\n    /* We could alter color or background here... */\n  },\n  alertSpace: {\n    width: '0.5em',\n  },\n}));\n\nexport type PaneStatus = { severity: 'error' | 'info' | 'progress' | 'success'; text: string };\n\ntype Props = {\n  children: ReactNode;\n  error?: Error & { frame?: string };\n  status?: PaneStatus;\n};\n\nexport default function ReplPane({ children, error, status: statusProp }: Props) {\n  const classes = useStyles();\n\n  const status: PaneStatus | undefined = error\n    ? { severity: 'error', text: error.message }\n    : statusProp;\n\n  const isMultilineError = error && error.message.split('\\n').length > 1;\n\n  return (\n    <div className={classes.pane}>\n      <div className={classes.content}>{children}</div>\n      <div className={classes.status}>\n        {status && (\n          <div\n            className={[\n              classes.alert,\n              isMultilineError ? classes.code : '',\n              classes[status.severity],\n            ].join(' ')}\n          >\n            {status.severity === 'progress' && (\n              <>\n                <CircularProgress size=\"1em\" color=\"secondary\" />\n                <div className={classes.alertSpace} />\n              </>\n            )}\n            {status.text}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { createContext, useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { SplitPane } from 'react-collapse-pane';\nimport ReplInput from '../repl/Input';\nimport ReplOutput from '../repl/Output';\nimport BundlerController from '../../bundler/BundlerController';\nimport { isError } from '../../workers/bundle';\nimport ReplPane, { PaneStatus } from '../repl/Pane';\nimport type { BundlerResult } from '../../bundler/Bundler';\nimport examples, { Example } from '../../examples';\nimport useStoredState from '../../hooks/useStoredState';\nimport type { ReplFile } from '../repl';\n\nexport type PreviewStatus =\n  | { type: 'ready'; stats: { duration: number } }\n  | { type: 'error'; error: Error };\n\nexport const PreviewContext = createContext({\n  setStatus: (status: PreviewStatus) => {},\n});\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative',\n    height: 'calc(100vh - 4rem)', // 4rem is the toolbar height\n  },\n}));\n\nconst debounce = 300;\n\ninterface Props {\n  example?: Example;\n}\n\nexport default function Repl({ example }: Props) {\n  const classes = useStyles();\n  const [files, setFiles] = useStoredState<ReplFile[]>({\n    key: 'repl-files',\n    defaultValue: examples[0].files,\n  });\n  const [inputErrors, setInputErrors] = useState<Error[]>([]);\n  const [bundlerStatus, setBundlerStatus] = useState<PaneStatus>();\n  const [previewStatus, setPreviewStatus] = useState<PaneStatus>();\n  const [bundlerResult, setBundlerResult] = useState<BundlerResult>();\n\n  useEffect(() => {\n    if (example) {\n      setFiles(example.files);\n    }\n  }, [example, setFiles]);\n\n  useEffect(() => {\n    console.log(`files: ${files.map((f) => f.name).join(',')}`);\n  }, [files]);\n\n  const bundler = useRef<BundlerController>();\n  useEffect(() => {\n    bundler.current = new BundlerController();\n  }, []);\n\n  useEffect(() => {\n    let cancelled = false;\n    const cancel = () => {\n      cancelled = true;\n    };\n\n    async function bundle() {\n      if (cancelled) return;\n\n      setInputErrors([]);\n      setBundlerStatus({ severity: 'progress', text: 'Bundler is running...' });\n\n      console.info('Rebundling application');\n      const result = await bundler.current!.bundle(files);\n\n      if (cancelled) return;\n      if (isError(result)) {\n        console.error('Bundling failed', result.error);\n        setInputErrors([result.error]);\n      } else if (result.result) {\n        console.log(result.result);\n        console.info('Bundler finished in', result.result.stats.duration, 'milliseconds');\n\n        setBundlerResult(result.result);\n        setBundlerStatus({\n          severity: 'success',\n          text: `Bundled in ${result.result.stats.duration}ms`,\n        });\n      }\n    }\n\n    setBundlerStatus({ severity: 'info', text: 'Input changed' });\n    setTimeout(bundle, debounce);\n\n    return cancel;\n  }, [files]);\n\n  useEffect(() => {\n    setPreviewStatus({\n      severity: 'info',\n      text: 'Waiting for bundle',\n    });\n  }, []);\n\n  function handlePreviewStatus(status: PreviewStatus) {\n    setPreviewStatus({\n      severity: status.type === 'error' ? 'error' : 'success',\n      text: status.type === 'error' ? status.error.message : `Loaded in ${status.stats.duration}ms`,\n    });\n  }\n\n  return (\n    <div className={classes.root}>\n      <SplitPane split=\"vertical\">\n        <ReplPane error={inputErrors?.[0]} status={bundlerStatus}>\n          <ReplInput files={files} onChange={setFiles} />\n        </ReplPane>\n        <ReplPane status={previewStatus}>\n          <PreviewContext.Provider value={{ setStatus: handlePreviewStatus }}>\n            <ReplOutput bundle={bundlerResult} />\n          </PreviewContext.Provider>\n        </ReplPane>\n      </SplitPane>\n    </div>\n  );\n}\n","import { useState } from 'react';\n\ntype Options<T> = {\n  storage?: Storage;\n  key: string;\n  defaultValue: T;\n};\n\nexport default function useStoredState<T>({\n  storage = localStorage,\n  key,\n  defaultValue,\n}: Options<T>) {\n  const [state, setState] = useState<T>(() => {\n    const stored = storage.getItem(key);\n    return stored ? JSON.parse(stored) : defaultValue;\n  });\n\n  function setStoredState(updatedState: T) {\n    storage.setItem(key, JSON.stringify(updatedState));\n    setState(updatedState);\n  }\n\n  return [state, setStoredState] as [T, (state: T) => void];\n}\n","import React, { useMemo, useState } from 'react';\nimport { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport useDarkMode from 'use-dark-mode';\nimport Header from './layout/Header';\nimport Repl from './pages/Repl';\nimport { Example } from '../examples';\n\nfunction App() {\n  const { value: prefersDarkMode } = useDarkMode();\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: 'rgb(87, 87, 87)',\n          },\n          secondary: {\n            main: 'rgb(242, 214, 0)',\n          },\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  const [example, setExample] = useState<Example>();\n  function handleExampleSelection(example: Example) {\n    setExample(example);\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header onSelectExample={handleExampleSelection} />\n      <Repl example={example}></Repl>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}